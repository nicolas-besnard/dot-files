set -g default-terminal "screen-256color"

# The prefix
unbind C-b
set-option -g prefix C-s

# TMUX index
set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on

# History
set-option -g history-limit 100000

# Clear fix
bind-key C-l send-keys "C-l"
bind-key C-k send-keys "C-k"

# Status bar
set-option -g status       on
set-option -g status-utf8  on

set-option -g status-left           "  #S  "
set-option -g status-left-style     "bg=black,fg=brightblack"
set-option -g status-left-length    60

set-option -g status-right          " %a #[fg=brightwhite]%H:%M #[fg=brightblack] %d/%m/%Y "
set-option -g status-right-style    "bg=black,fg=brightblack"
set-option -g status-right-length   60

set-option -g pane-border-style          "fg=brightblack"
set-option -g pane-active-border-style   "fg=brightblack"

set-option -g message-style   "bg=blue,fg=black"

set-window-option -g status-style   "bg=black"
set-window-option -g mode-style     "fg=black,bg=brightblack"

set-window-option -g window-status-separator   ""
set-window-option -g window-status-format      " #I:#W "
set-window-option -g window-status-style    "fg=brightblack"

set-window-option -g window-status-current-format   " #[fg=yellow]#I:#[fg=white]#W "
set-window-option -g window-status-current-style    "bg=black"

set-window-option -g window-status-bell-style       "fg=red"
set-window-option -g window-status-activity-style   "fg=blue"

bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# Resize panes rapidly
bind-key -r k resize-pane -U 5
bind-key -r j resize-pane -D 5
bind-key -r h resize-pane -L 5
bind-key -r l resize-pane -R 5

# Smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# ZSH is the default
set-option -g default-shell /bin/zsh

set-option -g mode-mouse on
set-option -g mouse-utf8 on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# bind '"' split-window -c "#{pane_current_path}"
# bind % split-window -h -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# Splits
bind-key - run "tmux split-window    && tmux last-pane && tmux send-keys 'C-l' && tmux last-pane"
bind-key = run "tmux split-window -h && tmux last-pane && tmux send-keys 'C-l' && tmux last-pane"
bind-key \ run "tmux split-window -h && tmux last-pane && tmux send-keys 'C-l' && tmux last-pane"

# Copy to clipboard
# bind-key -t emacs-copy M-w copy-pipe "reattach-to-user-namespace pbcopy"
# bind-key -t emacs-copy C-w copy-pipe "reattach-to-user-namespace pbcopy"
set-window-option -g mode-keys vi
bind-key -t vi-copy v begin-selection

bind-key -t vi-copy y copy-pipe "pbcopy"
bind-key -t vi-copy o copy-pipe "xargs open"
bind-key -t vi-copy O copy-pipe "xargs open --background"

bind-key Up select-pane -U
bind-key Down select-pane -D
bind-key Left select-pane -L
bind-key Right select-pane -R

setw -g c0-change-trigger 10
setw -g c0-change-interval 250
